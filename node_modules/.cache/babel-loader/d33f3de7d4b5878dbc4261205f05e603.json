{"ast":null,"code":"var _jsxFileName = \"/Users/kubilay.yavuz/Desktop/js_learning/form-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\nimport * as Yup from \"yup\";\n\nfunction TextInput({\n  label,\n  ...props\n}) {\n  const [field, meta] = useField(props);\n  const isPassword = props.name === \"password\" ? true : false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"text-input\"\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 36\n    }\n  }, meta.error) : null);\n}\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"ðŸ˜‚  \";\n    font-size: 15px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\nfunction SelectInput({\n  label,\n  ...props\n}) {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledSelect, Object.assign({}, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 36\n    }\n  }, meta.error) : null);\n}\n\nclass MainUserForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, \"User Info\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        summonerName: \"\"\n      } //  \tonSubmit={\n      // async (values, { setSubmitting }) => {\n      //      \tconst requestOptions = {\n      //        method: 'POST',\n      //        headers: {'Accept': 'application/json',\n      //        \t\t  'Content-Type': 'application/x-www-form-urlencoded'\n      //        \t\t},\n      //        body: JSON.stringify({username: values.username,\n      //        \t\t\t\t\t  password:values.password})\n      //   \t};\n      // const response = await fetch('http://127.0.0.1:5000/login-check', requestOptions);\n      // \t\t\tconst data = await response.json();\n      // \t\t\tconsole.log(data);\n      //        \tawait new Promise(r => setTimeout(r, 500));\n      //        \tsetSubmitting(false);\n      //        \tif (data.isLoggedIn){\n      //        \t\tthis.setState({ isLogggedIn: true });\n      //        \t\tthis.handleLogin();\n      //        \t}\n      // \t}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Summoner Name\",\n      name: \"summonerName\",\n      type: \"text\",\n      placeholder: \"ANANATEQBUMMM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SelectInput, {\n      label: \"Server\",\n      name: \"serverType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"TR\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"eune\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"EUNE\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"euw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, \"EUW\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"LAN\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"las\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, \"LAS\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"na\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }, \"NA\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"oce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, \"OCE\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ru\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"RU\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"br\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"BR\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"jp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"JP\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, \"KR\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pbe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, \"PBE\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\" // onClick={this.handleSubmit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Let's Go\"))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(MainUserForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/kubilay.yavuz/Desktop/js_learning/form-app/src/index.js"],"names":["React","ReactDOM","Formik","Form","useField","useFormikContext","styled","Yup","TextInput","label","props","field","meta","isPassword","name","touched","error","StyledLabel","StyledSelect","select","StyledErrorMessage","div","SelectInput","MainUserForm","Component","constructor","render","summonerName","document","getElementById"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\nimport * as Yup from \"yup\";\n\n\nfunction TextInput({label,...props}){\n\tconst [field,meta] = useField(props);\n\tconst isPassword=props.name===\"password\"?true:false;\n\treturn(\n\t\t\t<div>\n\t\t\t\t<label htmlFor = {props.name}>{label}</label>\n\t\t\t\t<input className=\"text-input\" {...field} {...props} />\n\t\t\t\t{meta.touched && meta.error ? (<StyledErrorMessage>{meta.error}\n\t\t\t\t\t\n\t\t\t\t</StyledErrorMessage>):null}\n\t\t\t\t\n\t\t\t</div>\n\n\t\t);\n}\n\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\n\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\n\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"ðŸ˜‚  \";\n    font-size: 15px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\n\nfunction SelectInput({label,...props}){\n\tconst [field,meta]=useField(props);\n\n\treturn (\n\t\t\t<div>\n\t\t\t\t<StyledLabel htmlFor={props.name}>{label}</StyledLabel>\n\t\t\t\t<StyledSelect {...field} {...props}/>\n\t\t\t\t{meta.touched && meta.error ? (<StyledErrorMessage>{meta.error}\n\t\t\t\t</StyledErrorMessage>):null}\n\t\t\t</div>\n\n\t\t);\n}\n\nclass MainUserForm extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t}\n\trender(){\n\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<h1>User Info</h1>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t          summonerName: \"\",\n\t\t\t\t        }\n\t\t\t\t   //  \tonSubmit={\n\t\t\t\t\t\t\t// async (values, { setSubmitting }) => {\n\t\t\t\t   //      \tconst requestOptions = {\n\t\t\t\t\t\t //        method: 'POST',\n\t\t\t\t\t\t //        headers: {'Accept': 'application/json',\n\t\t\t\t\t\t //        \t\t  'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t //        \t\t},\n\t\t\t\t\t\t //        body: JSON.stringify({username: values.username,\n\t\t\t\t\t\t //        \t\t\t\t\t  password:values.password})\n\t\t\t\t\t  //   \t};\n\t\t\t\t\t\t\t// const response = await fetch('http://127.0.0.1:5000/login-check', requestOptions);\n\t\t\t    // \t\t\tconst data = await response.json();\n\t\t\t    // \t\t\tconsole.log(data);\n\t\t\t\t   //        \tawait new Promise(r => setTimeout(r, 500));\n\t\t\t\t   //        \tsetSubmitting(false);\n\t\t\t\t   //        \tif (data.isLoggedIn){\n\t\t\t\t   //        \t\tthis.setState({ isLogggedIn: true });\n\t\t\t\t   //        \t\tthis.handleLogin();\n\t\t\t\t   //        \t}\n\t\t\t\t   // \t}\n\t\t\t\t    }>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\tlabel=\"Summoner Name\"\n\t\t\t\t\t\t\t\t\tname=\"summonerName\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"ANANATEQBUMMM\"/>\n\t\t\t\t\t\t\t\t<SelectInput label=\"Server\" name=\"serverType\">\n\t\t\t\t\t\t            <option value=\"tr\">TR</option>\n\t\t\t\t\t\t            <option value=\"eune\">EUNE</option>\n\t\t\t\t\t\t            <option value=\"euw\">EUW</option>\n\t\t\t\t\t\t            <option value=\"lan\">LAN</option>\n\t\t\t\t\t\t            <option value=\"las\">LAS</option>\n\t\t\t\t\t\t\t\t\t<option value=\"na\">NA</option>\n\t\t\t\t\t\t            <option value=\"oce\">OCE</option>\n\t\t\t\t\t\t            <option value=\"ru\">RU</option>\n\t\t\t\t\t\t            <option value=\"br\">BR</option>\n\t\t\t\t\t\t            <option value=\"jp\">JP</option>\n\t\t\t\t\t\t            <option value=\"kr\">KR</option>\n\t\t\t\t\t\t            <option value=\"pbe\">PBE</option>\n\t\t\t\t\t\t        </SelectInput>\n\t\t\t\t\t\t        <button type=\"submit\" \n\t\t\t\t\t\t\t\t// onClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t>Let's Go</button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Formik>\n\n\t\t\t\t</div>\n\t\t\t);\n\n\t}\n\n}\n\n\nReactDOM.render(<MainUserForm />, document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}