{"ast":null,"code":"var _jsxFileName = \"/Users/kubilay.yavuz/Desktop/js_learning/form-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\nimport * as Yup from \"yup\";\n\nfunction TextInput({\n  label,\n  ...props\n}) {\n  const [field, meta] = useField(props);\n  const isPassword = props.name === \"password\" ? true : false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"text-input\"\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 36\n    }\n  }, meta.error) : null);\n} // Styled components ....\n\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"ðŸ˜‚  \";\n    font-size: 15px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\nfunction SelectInput({\n  label,\n  ...props\n}) {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledSelect, Object.assign({}, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 36\n    }\n  }, meta.error) : null);\n}\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"isLogggedIn\": false\n    }; // this.handleSubmit=this.handleSubmit.bind(this)\n  } // handleSubmit(event){\n  //        this.setState({ isLogggedIn: true });\n  // \talert('submission made : ' + this.state.isLogggedIn);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }\n    }, \" Login\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object({\n        username: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n        password: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\")\n      }),\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        console.log(values.username);\n        console.log(values.password);\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password\n          })\n        };\n        console.log(requestOptions);\n        const response = await fetch('http://127.0.0.1:5000/login-check', requestOptions);\n        const data = await response.json();\n        console.log(data);\n        await new Promise(r => setTimeout(r, 500));\n        setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Username \",\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Annen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Password \",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\" // onClick={this.handleSubmit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, \"Login\"))));\n  }\n\n} // class Collapsible extends React.Component {\n// \tconstructor(props) {\n// \t    super(props);\n//         this.state = {\n//             open: false\n//         }\n// \tthis.togglePanel = this.togglePanel.bind(this);\n// \t}\n// \ttogglePanel(e) {\n// \t    this.setState({ open: !this.state.open })\n// \t}\n// \trender() {\n// \t        return (<div>\n// \t\t\t\t\t<div onClick={(e)=>this.togglePanel(e)} className='header'>\n// \t\t\t\t\t{this.props.title}</div> {this.state.open ? ( <div className = 'content' > { this.props.children } \n// \t\t\t\t\t\t  \t<LoginForm />\n// \t\t\t\t\t                \t</div>\n// \t\t\t\t\t                ) : null\n//             } <\n//             /div>);\n//         }\n// }\n// function App() {\n//   return ( \n//   \t<Collapsible/>\n//   \t);\n// }\n\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }\n  });\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/kubilay.yavuz/Desktop/js_learning/form-app/src/index.js"],"names":["React","ReactDOM","Formik","Form","useField","useFormikContext","styled","Yup","TextInput","label","props","field","meta","isPassword","name","touched","error","StyledLabel","StyledSelect","select","StyledErrorMessage","div","SelectInput","LoginForm","Component","constructor","state","render","username","password","object","string","max","required","values","setSubmitting","console","log","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","Promise","r","setTimeout","App","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\nimport * as Yup from \"yup\";\n\n\nfunction TextInput({label,...props}){\n\tconst [field,meta] = useField(props);\n\tconst isPassword=props.name===\"password\"?true:false;\n\treturn(\n\t\t\t<div>\n\t\t\t\t<label htmlFor = {props.name}>{label}</label>\n\t\t\t\t<input className=\"text-input\" {...field} {...props} />\n\t\t\t\t{meta.touched && meta.error ? (<StyledErrorMessage>{meta.error}\n\t\t\t\t\t\n\t\t\t\t</StyledErrorMessage>):null}\n\t\t\t\t\n\t\t\t</div>\n\n\t\t);\n}\n\n// Styled components ....\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\n\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\n\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"ðŸ˜‚  \";\n    font-size: 15px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\n\nfunction SelectInput({label,...props}){\n\tconst [field,meta]=useField(props);\n\n\treturn (\n\t\t\t<div>\n\t\t\t\t<StyledLabel htmlFor={props.name}>{label}</StyledLabel>\n\t\t\t\t<StyledSelect {...field} {...props}/>\n\t\t\t\t{meta.touched && meta.error ? (<StyledErrorMessage>{meta.error}\n\t\t\t\t</StyledErrorMessage>):null}\n\t\t\t</div>\n\n\t\t);\n}\n\nclass LoginForm extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\t\"isLogggedIn\":false,\n\n\t\t};\n\t\t// this.handleSubmit=this.handleSubmit.bind(this)\n\t}\n\t// handleSubmit(event){\n //        this.setState({ isLogggedIn: true });\n\t// \talert('submission made : ' + this.state.isLogggedIn);\n\t// }\n\trender(){\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t<h1> Login</h1>\n\t\t\t<Formik\n\t\t\tinitialValues={{\n\t          username: \"\",\n\t          password: \"\",\n\t        }}\n\t        validationSchema={Yup.object({\n          username: Yup.string()\n            .max(15, \"Must be 15 characters or less\")\n            .required(\"Required\"),\n          password: Yup.string()\n            .max(20, \"Must be 20 characters or less\")\n            .required(\"Required\"),\n        \t})}\n\t        onSubmit={async (values, { setSubmitting }) => {\n\t        \tconsole.log(values.username);\n\t        \tconsole.log(values.password);\n\t        \tconst requestOptions = {\n\t\t        method: 'POST',\n\t\t        headers: { 'Content-Type': 'application/json'},\n\t\t        body: JSON.stringify({username: values.username,\n\t\t        \t\t\t\t\t  password:values.password})\n\t\t    \t};\n\t\t\t\tconsole.log(requestOptions);\n\t\t\t\tconst response = await fetch('http://127.0.0.1:5000/login-check', requestOptions);\n    \t\t\tconst data = await response.json();\n    \t\t\tconsole.log(data);\n\t          \tawait new Promise(r => setTimeout(r, 500));\n\t          \tsetSubmitting(false);\n        \t}}\n\t        >\n\t        <Form>\n\t\t\t\t<TextInput \n\t\t\t\t\tlabel=\"Username \"\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Annen\"/>\n\t\t\t\t\n\t\t\t\t<TextInput \n\t\t\t\t\tlabel=\"Password \"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Enter your password\"/>\n\n\t\t\t\t<button type=\"submit\" \n\t\t\t\t\t\t// onClick={this.handleSubmit}\n\t\t\t\t\t\t>Login</button>\n\t\t\t</Form>\n\t\t\t</Formik>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\n}\n\n\n// class Collapsible extends React.Component {\n// \tconstructor(props) {\n// \t    super(props);\n//         this.state = {\n//             open: false\n//         }\n// \tthis.togglePanel = this.togglePanel.bind(this);\n// \t}\n// \ttogglePanel(e) {\n// \t    this.setState({ open: !this.state.open })\n// \t}\n// \trender() {\n// \t        return (<div>\n// \t\t\t\t\t<div onClick={(e)=>this.togglePanel(e)} className='header'>\n// \t\t\t\t\t{this.props.title}</div> {this.state.open ? ( <div className = 'content' > { this.props.children } \n// \t\t\t\t\t\t  \t<LoginForm />\n\n// \t\t\t\t\t                \t</div>\n// \t\t\t\t\t                ) : null\n//             } <\n//             /div>);\n//         }\n// }\n\n// function App() {\n//   return ( \n\n//   \t<Collapsible/>\n//   \t);\n// }\n\n\nfunction App() {\n  return (\n  \t<LoginForm/>\n  \t);\n}\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"]},"metadata":{},"sourceType":"module"}