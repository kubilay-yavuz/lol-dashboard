{"ast":null,"code":"var _jsxFileName = \"/Users/kubilay.yavuz/Desktop/js_learning/form-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\nimport * as Yup from \"yup\";\n\nfunction TextInput({\n  label,\n  ...props\n}) {\n  const [field, meta] = useField(props);\n  const isPassword = props.name === \"password\" ? true : false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"text-input\"\n  }, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 36\n    }\n  }, meta.error) : null);\n}\n\nvar myLineChart = new Chart(ctx, {\n  type: 'line',\n  data: data,\n  options: options\n});\n\nclass UserInfoAfterPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    ReactDOM.render( /*#__PURE__*/React.createElement(UserInfoPost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }), document.getElementById(\"root\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, \"Analysis for the summoner \" + this.props.summonerName + \" #\" + this.props.serverType.toUpperCase()), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    }, \"Look for another summoner\"));\n  }\n\n}\n\nclass UserInfoPost extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, \"User Info\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        summonerName: \"\"\n      },\n      validationSchema: Yup.object({\n        summonerName: Yup.string().min(1, \"Must be larger than 1 character\").required(\"Required\"),\n        serverType: Yup.string().ensure().required(\"Required\")\n      }),\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: JSON.stringify({\n            summonerName: values.summonerName,\n            serverType: values.serverType\n          })\n        };\n        const response = await fetch('http://127.0.0.1:5000//submit-summoner-form', requestOptions);\n        const data = await response.json();\n        console.log(data);\n        await new Promise(r => setTimeout(r, 500));\n        setSubmitting(false);\n\n        if (data.isRespRecvd) {\n          ReactDOM.render( /*#__PURE__*/React.createElement(UserInfoAfterPost, {\n            summonerName: values.summonerName,\n            serverType: values.serverType,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }), document.getElementById(\"root\"));\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Summoner Name\",\n      name: \"summonerName\",\n      type: \"text\",\n      placeholder: \"ANANATEQBUMMM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SelectInput, {\n      label: \"Server\",\n      name: \"serverType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"Choose a server\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"TR\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"eune\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"EUNE\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"euw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, \"EUW\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"LAN\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"las\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"LAS\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"na\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 10\n      }\n    }, \"NA\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"oce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"OCE\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ru\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, \"RU\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"br\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, \"BR\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"jp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, \"JP\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"KR\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pbe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"PBE\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\" // onClick={this.handleSubmit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Let's Go\"))));\n  }\n\n}\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"ðŸ˜‚  \";\n    font-size: 15px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\nfunction SelectInput({\n  label,\n  ...props\n}) {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledSelect, Object.assign({}, field, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 36\n    }\n  }, meta.error) : null);\n}\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"isLogggedIn\": false\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin(event) {\n    alert('Login Succesful : ' + this.state.isLogggedIn);\n    ReactDOM.render( /*#__PURE__*/React.createElement(UserInfoPost, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }), document.getElementById(\"root\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 4\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      validationSchema: Yup.object({\n        username: Yup.string().min(4).max(15, \"Must be between 4 and 15 characters\").required(\"Required\"),\n        password: Yup.string().min(8).max(20, \"Must be between 8 and 20 characters\").required(\"Required\")\n      }),\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password\n          })\n        };\n        const response = await fetch('http://127.0.0.1:5000/login-check', requestOptions);\n        const data = await response.json();\n        console.log(data);\n        await new Promise(r => setTimeout(r, 500));\n        setSubmitting(false);\n\n        if (data.isLoggedIn) {\n          this.setState({\n            isLogggedIn: true\n          });\n          this.handleLogin();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Username \",\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Your Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      label: \"Password \",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\" // onClick={this.handleSubmit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }\n    }, \"Login\"))));\n  }\n\n} // class Collapsible extends React.Component {\n// \tconstructor(props) {\n// \t    super(props);\n//         this.state = {\n//             open: false\n//         }\n// \tthis.togglePanel = this.togglePanel.bind(this);\n// \t}\n// \ttogglePanel(e) {\n// \t    this.setState({ open: !this.state.open })\n// \t}\n// \trender() {\n// \t        return (<div>\n// \t\t\t\t\t<div onClick={(e)=>this.togglePanel(e)} className='header'>\n// \t\t\t\t\t{this.props.title}</div> {this.state.open ? ( <div className = 'content' > { this.props.children } \n// \t\t\t\t\t\t  \t<LoginForm />\n// \t\t\t\t\t                \t</div>\n// \t\t\t\t\t                ) : null\n//             } <\n//             /div>);\n//         }\n// }\n// function App() {\n//   return ( \n//   \t<Collapsible/>\n//   \t);\n// }\n\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(LoginForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 4\n    }\n  });\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/kubilay.yavuz/Desktop/js_learning/form-app/src/index.js"],"names":["React","ReactDOM","Formik","Form","useField","useFormikContext","styled","Yup","TextInput","label","props","field","meta","isPassword","name","touched","error","myLineChart","Chart","ctx","type","data","options","UserInfoAfterPost","Component","constructor","handleSubmit","bind","event","render","document","getElementById","summonerName","serverType","toUpperCase","UserInfoPost","object","string","min","required","ensure","values","setSubmitting","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","console","log","Promise","r","setTimeout","isRespRecvd","StyledLabel","StyledSelect","select","StyledErrorMessage","div","SelectInput","LoginForm","state","handleLogin","alert","isLogggedIn","username","password","max","isLoggedIn","setState","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\nimport * as Yup from \"yup\";\n\n\nfunction TextInput({label,...props}){\n\tconst [field,meta] = useField(props);\n\tconst isPassword=props.name===\"password\"?true:false;\n\treturn(\n\t\t\t<div>\n\t\t\t\t<label htmlFor = {props.name}>{label}</label>\n\t\t\t\t<input className=\"text-input\" {...field} {...props} />\n\t\t\t\t{meta.touched && meta.error ? (<StyledErrorMessage>{meta.error}\n\t\t\t\t\t\n\t\t\t\t</StyledErrorMessage>):null}\n\t\t\t\t\n\t\t\t</div>\n\n\t\t);\n}\nvar myLineChart = new Chart(ctx, {\n    type: 'line',\n    data: data,\n    options: options\n});\nclass UserInfoAfterPost extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleSubmit=this.handleSubmit.bind(this);\n\t}\n\thandleSubmit(event){\n\t\tReactDOM.render(<UserInfoPost />, document.getElementById(\"root\"));\n\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t<h1>{\"Analysis for the summoner \"+this.props.summonerName +\" #\"+ this.props.serverType.toUpperCase()}\n\t\t\t</h1>\n\t\t\t<button type=\"submit\" \n\t\t\t\t\tonClick={this.handleSubmit}>\n\t\t\t\t\tLook for another summoner</button>\n\t\t\t</div>\n\t\t\t\t);\n\t}\n}\n\nclass UserInfoPost extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\trender(){\n\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<h1>User Info</h1>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t          summonerName: \"\",\n\t\t\t\t        }}\n\t\t\t\t\t\tvalidationSchema={Yup.object({\n\t\t\t\t          summonerName: Yup.string()\n\t\t\t\t          \t.min(1, \"Must be larger than 1 character\")\n\t\t\t\t            .required(\"Required\"),\n\t\t\t\t          serverType: Yup.string()\n\t\t\t\t          \t.ensure()\n\t\t\t\t            .required(\"Required\"),\n\t\t\t\t        \t})}\n\t\t\t\t    \tonSubmit={\n\t\t\t\t\t\t\tasync (values, { setSubmitting }) => {\n\t\t\t\t        \tconst requestOptions = {\n\t\t\t\t\t\t        method: 'POST',\n\t\t\t\t\t\t        headers: {'Accept': 'application/json',\n\t\t\t\t\t\t        \t\t  'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t        \t\t},\n\t\t\t\t\t\t        body: JSON.stringify({summonerName: values.summonerName,\n\t\t\t\t\t\t        \t\t\t\t\t  serverType:values.serverType})\n\t\t\t\t\t    \t};\n\t\t\t\t\t\t\tconst response = await fetch('http://127.0.0.1:5000//submit-summoner-form', requestOptions);\n\t\t\t    \t\t\tconst data = await response.json();\n\t\t\t    \t\t\tconsole.log(data);\n\t\t\t\t          \tawait new Promise(r => setTimeout(r, 500));\n\t\t\t\t          \tsetSubmitting(false);\n\t\t\t\t          \tif (data.isRespRecvd){\n\t\t\t\t\t\t\t\tReactDOM.render(<UserInfoAfterPost \n\t\t\t\t\t\t\t\t\t\t\t\tsummonerName={values.summonerName}\n\t\t\t\t\t\t\t\t\t\t\t\tserverType={values.serverType}/>,\n\t\t\t\t\t\t\t\t\t\t\t\t document.getElementById(\"root\"));\n\t\t\t\t          \t}\n\t\t\t\t   \t}\n\t\t\t\t    }>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\tlabel=\"Summoner Name\"\n\t\t\t\t\t\t\t\t\tname=\"summonerName\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"ANANATEQBUMMM\"/>\n\t\t\t\t\t\t\t\t<SelectInput label=\"Server\" name=\"serverType\">\n\t\t\t\t\t\t            <option value=\"\">Choose a server</option>\n\t\t\t\t\t\t            <option value=\"tr\">TR</option>\n\t\t\t\t\t\t            <option value=\"eune\">EUNE</option>\n\t\t\t\t\t\t            <option value=\"euw\">EUW</option>\n\t\t\t\t\t\t            <option value=\"lan\">LAN</option>\n\t\t\t\t\t\t            <option value=\"las\">LAS</option>\n\t\t\t\t\t\t\t\t\t<option value=\"na\">NA</option>\n\t\t\t\t\t\t            <option value=\"oce\">OCE</option>\n\t\t\t\t\t\t            <option value=\"ru\">RU</option>\n\t\t\t\t\t\t            <option value=\"br\">BR</option>\n\t\t\t\t\t\t            <option value=\"jp\">JP</option>\n\t\t\t\t\t\t            <option value=\"kr\">KR</option>\n\t\t\t\t\t\t            <option value=\"pbe\">PBE</option>\n\t\t\t\t\t\t        </SelectInput>\n\t\t\t\t\t\t        <button type=\"submit\" \n\t\t\t\t\t\t\t\t// onClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t>Let's Go</button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Formik>\n\n\t\t\t\t</div>\n\t\t\t);\n\n\t}\n\n}\n\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\n\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\n\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"ðŸ˜‚  \";\n    font-size: 15px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\n\nfunction SelectInput({label,...props}){\n\tconst [field,meta]=useField(props);\n\n\treturn (\n\t\t\t<div>\n\t\t\t\t<StyledLabel htmlFor={props.name}>{label}</StyledLabel>\n\t\t\t\t<StyledSelect {...field} {...props}/>\n\t\t\t\t{meta.touched && meta.error ? (<StyledErrorMessage>{meta.error}\n\t\t\t\t</StyledErrorMessage>):null}\n\t\t\t</div>\n\n\t\t);\n}\n\nclass LoginForm extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\t\"isLogggedIn\":false,\n\n\t\t};\n\t\tthis.handleLogin=this.handleLogin.bind(this);\n\t}\n\thandleLogin(event){\n\t\talert('Login Succesful : ' + this.state.isLogggedIn);\n\t\tReactDOM.render(<UserInfoPost />, document.getElementById(\"root\"));\n\n\t}\n\trender(){\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t<h1>Login</h1>\n\t\t\t<Formik\n\t\t\tinitialValues={{\n\t          username: \"\",\n\t          password: \"\",\n\t        }}\n\t        validationSchema={Yup.object({\n\t          username: Yup.string()\n\t          \t.min(4)\n\t            .max(15, \"Must be between 4 and 15 characters\")\n\t            .required(\"Required\"),\n\t          password: Yup.string()\n\t          \t.min(8)\n\t            .max(20, \"Must be between 8 and 20 characters\")\n\t            .required(\"Required\"),\n\t        \t})}\n\t        onSubmit={async (values, { setSubmitting }) => {\n\t        \tconst requestOptions = {\n\t\t\t        method: 'POST',\n\t\t\t        headers: {'Accept': 'application/json',\n\t\t\t        \t\t  'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t        \t\t},\n\t\t\t        body: JSON.stringify({username: values.username,\n\t\t\t        \t\t\t\t\t  password:values.password})\n\t\t    \t};\n\t\t\t\tconst response = await fetch('http://127.0.0.1:5000/login-check', requestOptions);\n    \t\t\tconst data = await response.json();\n    \t\t\tconsole.log(data);\n\t          \tawait new Promise(r => setTimeout(r, 500));\n\t          \tsetSubmitting(false);\n\t          \tif (data.isLoggedIn){\n\t          \t\tthis.setState({ isLogggedIn: true });\n\t          \t\tthis.handleLogin();\n\t          \t}\n        \t}}\n\t        >\n\t        <Form>\n\t\t\t\t<TextInput \n\t\t\t\t\tlabel=\"Username \"\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Your Username\"/>\n\t\t\t\t\n\t\t\t\t<TextInput \n\t\t\t\t\tlabel=\"Password \"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Enter your password\"/>\n\n\t\t\t\t<button type=\"submit\" \n\t\t\t\t\t\t// onClick={this.handleSubmit}\n\t\t\t\t\t\t>Login</button>\n\t\t\t</Form>\n\t\t\t</Formik>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\n}\n\n\n// class Collapsible extends React.Component {\n// \tconstructor(props) {\n// \t    super(props);\n//         this.state = {\n//             open: false\n//         }\n// \tthis.togglePanel = this.togglePanel.bind(this);\n// \t}\n// \ttogglePanel(e) {\n// \t    this.setState({ open: !this.state.open })\n// \t}\n// \trender() {\n// \t        return (<div>\n// \t\t\t\t\t<div onClick={(e)=>this.togglePanel(e)} className='header'>\n// \t\t\t\t\t{this.props.title}</div> {this.state.open ? ( <div className = 'content' > { this.props.children } \n// \t\t\t\t\t\t  \t<LoginForm />\n\n// \t\t\t\t\t                \t</div>\n// \t\t\t\t\t                ) : null\n//             } <\n//             /div>);\n//         }\n// }\n\n// function App() {\n//   return ( \n\n//   \t<Collapsible/>\n//   \t);\n// }\n\n\nfunction App() {\n  return (\n  \t<LoginForm/>\n  \t);\n}\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}